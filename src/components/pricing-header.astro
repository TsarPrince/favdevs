---
import Sectionhead from "@components/sectionhead.astro";
import Pricing from "@components/pricing.astro";
import { sanityClient } from "sanity:client";

const pricing = await sanityClient.fetch(`*[_type == "pricing"]{
  heading,
  subHeading,
  plans[] {
    name,
    description,
    priceId,
    cycle,
    price,
    features,
    popular,
    button->{ text, path }
  }
}[0]`);
// console.log(JSON.stringify(pricing, null, 2));
---

<Sectionhead>
  <Fragment slot="title">{pricing.heading}</Fragment>
  <Fragment slot="desc">
    {pricing.subHeading}
  </Fragment>
</Sectionhead>

<div class="mt-12 flex justify-center text-lg text-slate-600 space-x-4">
  <div>
    <p>Billed Monthly</p>
  </div>

  <!-- switch -->
  <button
    id="toggle-billing-cycle"
    class="pointer-events-auto h-6 w-10 rounded-full p-1 ring-1 ring-inset transition duration-200 ease-in-out bg-indigo-600 ring-black/20 disabled:opacity-80">
    <div
      class:list={[
        "h-4 w-4 rounded-full bg-white shadow-sm ring-1 ring-slate-700/10 transition duration-200 ease-in-out",
      ]}>
    </div>
  </button>

  <div>
    <p>Billed Anually</p>
  </div>
</div>

<div
  class:list={[
    "monthly-default hidden grid md:grid-cols-3 gap-10 mx-auto max-w-screen-lg mt-12 ",
  ]}>
  {
    pricing.plans
      .filter((plan) => plan.cycle == "yearly" || plan.cycle == "custom")
      .map((item) => <Pricing plan={item} />)
  }
</div>
<div
  class:list={[
    "monthly-default grid md:grid-cols-3 gap-10 mx-auto max-w-screen-lg mt-12",
  ]}>
  {
    pricing.plans
      .filter((plan) => plan.cycle == "monthly" || plan.cycle == "custom")
      .map((item) => <Pricing plan={item} />)
  }
</div>

<script>
  // view transition to smoothly translate the toggle
  document.addEventListener("astro:page-load", () => {
    const button = document.querySelector<HTMLButtonElement>(
      "#toggle-billing-cycle",
    );
    if (button) {
      // switch toggle
      const toggle = button.querySelector("div");
      button.addEventListener("click", () => {
        toggle?.classList.toggle("translate-x-4");

        // toggle all hidden classNames
        document
          .querySelectorAll(".monthly-default")
          ?.forEach((item) => item.classList.toggle("hidden"));
      });
    }
  });
</script>
